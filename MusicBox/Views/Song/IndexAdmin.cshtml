@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
@* ////MusAPIIII *@
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width" />

	<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.0/css/bootstrap.min.css" rel="stylesheet" />
	<script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-2.2.0.min.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</head>
<body>
	<div class="block">
		<div class="add">
			<div class="addU">
				<h4>Изменить пользователя</h4>
				<form name="userForm" id="userName">
					<input type="hidden" name="Id" value="0" />
					<div class="form-group col-md-5">
						<label for="FirstName">Имя:</label>
						<input class="in" name="firstName" />
					</div>
					<div class="form-group col-md-5">
						<label for="LastName">Фамилия:</label>
						<input class="in" name="lastName" />
					</div>
					<div class="form-group col-md-5">
						<label for="Login">Логин:</label>
						<input class="in" name="login" />
					</div>
					<div class="form-group col-md-5">
						<label for="Email">Email:</label>
						<input class="in" name="email" />
					</div>

					<div class="panel-body">
						<button id="submitUser" class="blue">Сохранить</button>
						<button id="reset2" class="blue">Сбросить</button>
					</div>
				</form>
			</div>

			<div class="addS">
				<h4>Добавить/изменить песню</h4>
				<form name="songForm" id="songName" enctype="multipart/form-data" method="POST">
					<input type="hidden" id="idSong" name="Id" value="0" />
					<div class="row">
						<div class="form-group col-md-6">
							<label for="name" class="labels">Название:</label>
							<input class="in" id="nameSong" name="name" />
						</div>
						<div class="form-group col-md-6">
							<label for="singer" class="labels">Исполнитель:</label>
							<input class="in" id="singerSong" name="singer" />
						</div>
					</div>
					<div class="row">
						<div class="form-group col-md-6">
							<label for="runtime" class="labels">Длительность:</label>
							<input class="in" id="runtimeSong" name="runtime" />
						</div>
						<div class="form-group col-md-6">
							<label for="size" class="labels">Размер в МБ:</label>
							<input class="in" id="sizeSong" name="size" />
						</div>
					</div>
					<div class="row">
						<div class="form-group col-md-6"
							<label for="file" class="labels">Загрузите аудиофайл МР3</label>
						<img id="FileCreate" />
							<div id="FileFile">

								<input value="" input for="file" style="width:480px; margin-left:10px;" type="file" name="uploadedHref" id="musFile" multiple class="form-control" accept="audio/mpeg, .mp3" />

								<span for="file" class="text-danger"></span>
							</div>
						</div>
					</div>

					<div class="row">
						<div class="form-group col-md-6">
							<label for="pic" class="labels">Загрузите постер</label>
							<img id="PosterCreate" />
							<div id="PosterFile">
								<input value="" input for="pic" style="width:480px;margin-left:10px;" type="file" name="uploadedPreview" id="AddPoster" multiple class="form-control" accept=".jpeg, .jpg" />

								<span for="pic" class="text-danger"></span>
							</div>
						</div>
					</div>

					<div class="row">
						<div class="form-group col-md-6">
							<label for="Datetime" class="labels">Дата загрузки:</label>
							<input class="form-control" id="datetimeSong" name="datetime" type="date" />
						</div>
						<div class="form-group col-md-6">
							<label for="genre" class="labels">Жанр:</label>
							<select id="genreSelect" class="labels" name="GenreId"></select>
							<span id="genreError" class="text-danger"></span>
						</div>			
					</div>
					<div class="row">
						<div class="form-group col-md-6">
							<label for="user" class="labels">Загружено пользователем:</label>
							<input class="in" id="userSong" name="user" />
						</div>

						<div class="form-group col-md-6">
							<div class="panel-body">
								<button id="submit" class="blue">Сохранить</button>
								<button id="reset" class="blue">Сбросить</button>
							</div>
						</div>
					</div>
				</form>
			</div>


			<div class="addG">
				<h4>Добавить/изменить жанр</h4>
				<form name="genreForm" id="genreName">
					<input type="hidden" name="Id" value="0" />
					<div class="form-group col-md-5">
						<label for="name">Название жанра:</label>
						<input class="in" name="name" />
					</div>


					<div class="panel-body">
						<button id="submitgenre" class="blue">Сохранить</button>
						<button id="reset" class="blue">Сбросить</button>
					</div>
				</form>
			</div>
		</div>
	</div>

	<div class="page">
		<div class="users">
			<h4>Список пользователей</h4>
			<table class="table table-condensed table-striped col-md-6 user1">


				<tbody></tbody>
			</table>
		</div>

		<div class="songs">
			<h4>Плей-лист</h4>
			<table class="table table-condensed table-striped col-md-6 song1">

				<tbody></tbody>
			</table>
		</div>
		<div class="genres">
			<h4>Жанры</h4>
			<table class="table table-condensed table-striped col-md-6 genre1">

				<tbody></tbody>
			</table>
		</div>
	</div>
	</div>
	<script>

		$(document).ready(function () {

			// загрузка
			GetSongs();

			// Получение всех
			function GetSongs() {
				$.ajax({
					contentType: "application/json",
					url: "https://localhost:7297/api/Songs",
					method: 'GET',
					success: function (songs) {
						console.log(songs);
						let rows = "";
						$.each(songs, function (index, song) {

							rows += row(song);
						})

						$(".song1").append(rows);
					},
					error: function (x) {
						console.log(x.responseText);
					}
				});
			}



			let row = function (song) {

				let temp = "<div class='song'>Название: " + song.name + "<br>Исполнитель: " + song.singer +
					"<br>Длительность: " + song.runtime + "<br>Размер в МБ: " + song.size +
					"<br><audio src='" + song.file + "' controls></audio>" +
					"<img class='pict' src='" + song.pic + "' alt='Постер'>" +
					"<br><button id='blue' class='editLink' data-id='" + song.id + "'>Изменить</button> " +
					"<button id='blue' class='removeLink' data-id='" + song.id + "'>Удалить</button>" +


					"<br>Дата загрузки : " + song.dateView +
					"<br>Жанр : " + song.genre.name;
				;

				if (song.user && song.user.name) {
					temp += "<br>Пользователь: " + song.user.name;
				}
				temp += "<hr><hr></div>";
			

				return temp;
			};
			function CleanSong() {
				let form = document.forms["songForm"];
				
				console.log(form.elements["pic"]);
				form.elements["name"].value = "";
				form.elements["Id"].value = 0;
				form.elements["singer"].value = "";
				form.elements["runtime"].value = "";
				form.elements["size"].value = "";
				form.elements["uploadedPreview"].value = "";
				form.elements["uploadedHref"].value = "";
				form.elements["datetime"].value = "";
				 form.elements["user"].value = "";
			}
			////для комбобокса жанров
			$(document).ready(function () {
				$.ajax({
					url: "https://localhost:7297/api/Genres",
					type: 'GET',
					success: function (data) {					
						var select = $('#genreSelect');
						select.empty();
						$.each(data, function (index, genre) {
							select.append($('<option></option>').val(genre.id).text(genre.name));
						});
					},
					error: function (x) {
						console.log(x);
					}
				
				});
			});

			////////////////////////////////////////////////////////////////////////////////////////////////////////




			/////////////////////////////////////////////////////////////////////////////////////////////////////

			// Получение одного
			function GetSong(id) {

				$.ajax({
					url: 'https://localhost:7297/api/Songs/' + id,
					method: 'GET',
					contentType: "application/json",
					success: function (song) {
						console.log(song);

						let form = document.forms["songForm"];
						form.elements["Id"].value = song.id;
						form.elements["name"].value = song.name;
						form.elements["singer"].value = song.singer;
						form.elements["runtime"].value = song.runtime;
						form.elements["size"].value = song.size;
						form.elements["datetime"].value = song.dateView;
						form.elements["genre"].value = song.genre.name;
						form.elements["user"].value = song.user.login;
						if (song.uploadedHref) {
							let audioF = document.getElementById("FileCreate");
							audioF.src = song.uploadedHref;
						}

					},
					error: function (x) {
						alert(x.status);
					}
				});
			}
		
			$('#submit').click(function (e) {
			
				e.preventDefault();
				let formData = new FormData();

				formData.append("name", $('#nameSong').val());
				formData.append("singer", $('#singerSong').val());
				formData.append("runtime", $('#runtimeSong').val());
				formData.append("size", $('#sizeSong').val());
				formData.append("DateTime", $('#datetimeSong').val());
				formData.append("genre", $('#genreSelect').val());
				formData.append("user", $('#userSong').val());

				var musfile = $('#musFile')[0].files[0];
				var picfile = $('#AddPoster')[0].files[0];

				if (musfile) {
					formData.append("musfile", musfile);
				}
				if (picfile) {
					formData.append("picfile", picfile);
				}

				let idSong = $('#idSong').val();

				if (idSong === '0') {
					$.ajax({
						type: "POST",
						url: 'https://localhost:7297/api/Songs',
						contentType: false, 
						processData: false, 
						data: formData,
						success: function (result) {
							location.reload();
							alert("Песня добавлена");
						},
						error: function (xhr, status, p3) {
							console.log(xhr.responseText);
						}
					});
				}
				else {
					formData.append("Id", idSong);

					$.ajax({
						type: "PUT",
						url: 'https://localhost:7297/api/Songs',
						contentType: false, 
						processData: false, 
						data: formData,
						success: function (result) {
							location.reload();
							alert("Песня изменена");
						},
						error: function (xhr, status, p3) {
							console.log(xhr.responseText);
						}
					});
				}
			});

			// Добавление
			function CreateSong(songName, songSinger, songRun, songSize, songPic, songFile, songDate, songGenre, songUser) {
				$.ajax({
					url: "https://localhost:7297/api/Songs",
					contentType: "application/json",
					method: "POST",
					data: JSON.stringify({
						name: songName,
						singer: songSinger,
						runtime: songRun,
						size: songSize,
						pic: songPic,
						file: songFile,
						Datetime: songDate,
						genre: songGenre,
						user: songUser
					}),
					success: function (song) {
						console.log(song);
						$(".song1").append(row(song));
						let form = document.forms["songForm"];
						
						form.elements["Id"].value = 0;
					},
					error: function (x) {
						alert(x.status);
					}
				})
			}



			// Изменение
			function EditSong(id, name, singer, runtime, size, Datetime, genre, user) {

				let formdata = new FormData();
				formdata.append("id", id);
				formdata.append("name", name);
				formdata.append("singer", singer);
				formdata.append("runtime", runtime);
				formdata.append("size", size);
				formdata.append("datetime", Datetime);
				formdata.append("genre", genre);
				formdata.append("user", user);
				var musfile = $('#musFile')[0].files[0];
				var picfile = $('#AddPoster')[0].files[0];

				if (musfile) {
					formdata.append("uploadedHref", musfile);
				}
				if (picfile) {
					formdata.append("uploadedPreview", picfile);
				}

				$.ajax({
					url: 'https://localhost:7297/api/Songs/' + id,
					method: 'PUT', 
					data: formdata,

					processData: false,
					contentType: false,


					success: function (song) {
						console.log("зашли в функцию");
						console.log("Песня успешно изменена");
						
					},
					error: function (xhr, status, error) {
						console.error("Произошла ошибка при изменении песни:", error);
					}
				})
			}
	

			// Удаление
			function DeleteSong(id) {
				if (!confirm("Вы действительно желаете удалить песню?"))
					return;
				$.ajax({
					url: "https://localhost:7297/api/Songs/" + id,
					contentType: "application/json",
					method: "DELETE",
					success: function (song) {
						location.reload();
					},
					error: function (x, y, z) {
						alert(x.status + '\n' + y + '\n' + z);
					}
				})
			}

			// сброс значений формы
			$("#reset").click(function (e) {
				e.preventDefault();
				CleanSong();
			});

		

			// нажимаем на ссылку Изменить
			$("body").on("click", ".editLink", function () {
				let id = $(this).data("id");
				GetSong(id);
			});

			// нажимаем на ссылку Удалить
			$("body").on("click", ".removeLink", function () {
				let id = $(this).data("id");
				DeleteSong(id);
			});

			// загрузка//////////////////////////////////////////////////////////////////////////
			GetGenres();


			//Получение всех
			function GetGenres() {
				$.ajax({

					url: "https://localhost:7297/api/Genres",
					method: "GET",
					contentType: "application/json",
					success: function (genres) {

						let rows = "";
						$.each(genres, function (index, genre) {

							rows += row1(genre);
						})
						$(".genre1").append("");
						$(".genre1").append(rows);
					},
					error: function (x) {
						console.log(x);
					}
				});
			}

			//Получение одного
			function GetGenre(id) {
				$.ajax({
					url: "https://localhost:7297/api/Genres/" + id,
					method: 'GET',
					contentType: "application/json",
					success: function (genre) {
						let form = document.forms["genreForm"];
						form.elements["Id"].value = genre.id;
						form.elements["name"].value = genre.name;

					},
					error: function (x) {
						alert(x.status);
					}
				});
			}
			//Добавление
			function CreateGenre(genreName) {
				$.ajax({
					url: "https://localhost:7297/api/Genres",
					contentType: "application/json",
					method: "POST",
					data: JSON.stringify({
						name: genreName,

					}),
					success: function (genre) {
						$(".genre1").append(row1(genre));
						// let form = document.forms["genreForm"];
						// form.reset();
						CleanGenre();

					},
					error: function (x) {
						alert(x.status);
					}
				})
			}

			function CleanGenre() {

				let form = document.getElementById("genreName");
				form.elements["name"].value = "";
				form.elements["Id"].value = 0;
			}


			//Изменение
			function EditGenre(genreId, genreName) {

				let request = JSON.stringify({
					id: genreId,
					name: genreName,

				});

				$.ajax({
					url: "https://localhost:7297/api/Genres",
					contentType: "application/json",
					method: "PUT",
					data: request,

					success: function (genre) {
						CleanGenre();
						GetGenres();
					},
					error: function (x) {
						alert(x + '\n' + y + '\n' + z);
					}
				})
			}


			//Удаление
			function DeleteGenre(id) {
				if (!confirm("Вы действительно желаете удалить жанр?"))
					return;
				$.ajax({
					url: "https://localhost:7297/api/Genres/" + id,
					contentType: "application/json",
					method: "DELETE",
					success: function (genre) {
						location.reload();
					},
					error: function (x, y, z) {
						alert(x.status + '\n' + y + '\n' + z);
					}
				})
			}


			let row1 = function (genre) {

				let temp1 = "<div class='genre'>Название: " + genre.name;
				temp1 += "<br><button id='blue' class='editLink1' data-id='" + genre.id + "'>Изменить</a>  " +
					"<button id='blue' class='removeLink1' data-id='" + genre.id + "'>Удалить</a></div>";

				return temp1;
			};

			//сброс значений формы
			$("#reset1").click(function (e) {
				e.preventDefault();
				let form = document.forms["genreForm"];
				form.reset();
				form.elements["Id"].value = 0;
			});

			//отправка формы
			$("#submitgenre").click(function (e) {
				e.preventDefault();
				let form = document.forms["genreForm"];
				let id = form.elements["Id"].value;
				let name = form.elements["name"].value;
				if (id == 0) {
					CreateGenre(name);
				}
				else {
					EditGenre(id, name);

				}
			});

			//нажимаем на ссылку Изменить
			$("body").on("click", ".editLink1", function () {
				let id = $(this).data("id");
				GetGenre(id);
			});

			//нажимаем на ссылку Удалить
			$("body").on("click", ".removeLink1", function () {
				let id = $(this).data("id");
				DeleteGenre(id);
			});
			/////////////////////////////////////////////////////////////////////////////////////////
			GetUsers();
			//Получение всех
			function GetUsers() {
				$.ajax({

					url: "https://localhost:7297/api/User",
					method: "GET",
					contentType: "application/json",
					success: function (users) {

						let rows = "";
						$.each(users, function (index, user) {

							rows += row2(user);
						})
						$(".user1").append(rows);
					},
					error: function (x) {
						console.log(x);
					}
				});
			}
			function CleanUser() {

				let form = document.getElementById("userName");
				form.elements["Id"].value = 0;
				form.elements["firstName"].value = "";
				form.elements["lastName"].value = "";
				form.elements["login"].value = "";
				form.elements["email"].value = "";
			}



			//Получение одного
			function GetUser(id) {
				$.ajax({
					url: "https://localhost:7297/api/User/" + id,
					method: 'GET',
					contentType: "application/json",
					success: function (user) {
						let form = document.forms["userForm"];
						form.elements["Id"].value = user.id;
						form.elements["firstName"].value = user.firstName;
						form.elements["lastName"].value = user.lastName;
						form.elements["login"].value = user.login;
						form.elements["email"].value = user.email;

					},
					error: function (x) {
						alert(x.status);
					}
				});
			}
			//Добавление
			function CreateUser(userName) {
				$.ajax({
					url: "https://localhost:7297/api/User",
					contentType: "application/json",
					method: "POST",
					data: JSON.stringify({
						name: userName,

					}),
					success: function (user) {
						$("user1").append(row(user));
						let form = document.forms["userForm"];
						form.reset();
						form.elements["Id"].value = 0;
					},
					error: function (x) {
						alert(x.status);
					}
				})
			}

			//Изменение
			function EditUser(userId, userName, userLastname, userLogin, userEmail) {

				let request = JSON.stringify({
					id: userId,
					name: userName,
					lastname: userLastname,
					login: userLogin,
					email: userEmail

				});
				$.ajax({
					url: "https://localhost:7297/api/User",
					contentType: "application/json",
					method: "PUT",
					data: request,
					success: function (user) {
						CleanUser();
						GetUsers();
					},
					error: function (x) {
						alert(x.status);
					}
				})
			}



			//Удаление
			function DeleteUser(id) {
				if (!confirm("Вы действительно желаете удалить пользователя?"))
					return;
				$.ajax({
					url: "https://localhost:7297/api/User/" + id,
					contentType: "application/json",
					method: "DELETE",
					success: function (user) {
						location.reload();
					},
					error: function (x, y, z) {
						alert(x.status + '\n' + y + '\n' + z);
					}
				})
			}

			//создание строки для таблицы
			let row2 = function (user) {

				let temp2 = "<div class='user'>Имя: " + user.firstName +
					"<br>Фамилия: " + user.lastName +
					"<br>Логин: " + user.login + "<br>Email: " + user.email;


				temp2 += "<br><button id='blue' class='editLink2' data-id='" + user.id + "'>Изменить</a>  " +
					"<button id='blue' class='removeLink2' data-id='" + user.id + "'>Удалить</a></div>";

				return temp2;
			};

			//сброс значений формы
			$("#reset2").click(function (e) {
				e.preventDefault();
				let form = document.forms["userForm"];
				form.reset();
				form.elements["Id"].value = 0;
			});

			//отправка формы
			$("#submitUser").click(function (e) {
				e.preventDefault();
				let form = document.forms["userForm"];
				let id = form.elements["Id"].value;
				let firstname = form.elements["firstName"].value;
				let lastname = form.elements["lastName"].value;
				let login = form.elements["login"].value;
				let email = form.elements["email"].value;

				if (id == 0)
					CreateUser(firstname, lastname, login, email);
				else
					EditUser(id, firstname, lastname, login, email);
			});

			//нажимаем на ссылку Изменить
			$("body").on("click", ".editLink2", function () {
				let id = $(this).data("id");
				GetUser(id);

			});

			//нажимаем на ссылку Удалить
			$("body").on("click", ".removeLink2", function () {
				let id = $(this).data("id");
				DeleteUser(id);
			});



		});

	</script>


</body>
</html>
